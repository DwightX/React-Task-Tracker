{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTasks","method","headers","body","JSON","stringify","deleteTask","filter","console","log","toggleReminder","taskToToggle","updTask","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f3bee56.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color,text,onClick}) => {\n    return (\n        <button\n        onClick={onClick}\n        style={{backgroundColor:color}} \n        className='btn'>{text}\n        </button>\n    )\n}\nButton.defaultProps = {\n    color: 'stealblue'\n}\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick : PropTypes.func\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\nimport { useLocation } from 'react-router-dom'\n\nconst Header = ({title, onAdd, showAdd}) => {\n    const location = useLocation()\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && (\n                <Button \n                color={showAdd ? 'green' : 'red'} \n                onClick={onAdd} \n                text={showAdd ? 'Close' : 'Add'}\n                />\n            )}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Task Tracker\",\n  }\n\n  Header.propTypes = {\n      title: PropTypes.string.isRequired\n  }\n\nexport default Header","import { Link } from \"react-router-dom\"\n\nconst Footer = () =>{\n    return(\n        <footer>\n        <p>Copyright &copy; 2021</p>\n        <Link to='/about'>About</Link>\n        </footer>\n    )\n}\nexport default Footer","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle}) => {\n    return(\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)} >\n        <h3> {task.text} {' '}\n        <FaTimes \n         style={{color:'red', cursor:'pointer'}}\n         onClick={() => onDelete(task.id)}\n         />\n        </h3>\n        <p>{task.day}</p>\n        </div>\n    )\n}\nexport default Task","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n        {tasks.map((task,index) => (\n            <Task key={index} task={task} \n            onDelete={onDelete} \n            onToggle={onToggle}\n            />\n         ))}\n        </>\n    )\n}\n\nexport default Tasks","import {useState} from 'react';\n\n\nconst AddTask = ({onAdd}) => {\n\n     const[text, setText] = useState('')\n     const[day, setDay] = useState('')\n     const[reminder, setReminder] = useState(false)\n\n     const onSubmit = (e) => {\n         e.preventDefault()\n         if(!text){\n             alert('Please add a task')\n             return\n         }\n         onAdd({ text, day, reminder })\n\n         setText('')\n         setDay('')\n         setReminder(false)\n     }\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input type=\"text\" \n        placeholder=\"Add Task\" \n        value={text} \n        onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input type=\"text\" placeholder=\"Add Day & Time\" \n        value={day} \n        onChange={(e) => setDay(e.target.value)}/>\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input \n        type=\"checkbox\" \n        checked={reminder}\n        value={reminder} \n        onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import { Link } from \"react-router-dom\"\n\nconst About = () =>{\n    return(\n        <div>\n        <h4>Version 1.0</h4>\n        <Link to='/'>Go Back</Link>\n        </div>\n    )\n}\nexport default About","\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from './components/Footer';\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport About from \"./components/About\"\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n\n  // Fetch Task\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    \n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    \n    return data\n  }\n\n  \n\n  // Add Task\n  const addTasks = async (task) => {\n    const res = await fetch(`http://localhost:5000/tasks`,{\n      method:'POST',\n      headers:{\n          'Content-type':'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n    // const id = Math.floor(Math.random() * 1000) + 1\n    // const newTask = {id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n  //Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method:'DELETE',\n    })\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n  console.log(tasks);\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json', \n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  }\n  return (\n    <Router>\n\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      <Route path='/' exact render={() => (\n        <>\n        {showAddTask && <AddTask onAdd={addTasks}/>}\n        {tasks.length > 1 ? (\n          <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n        ) : (\n          \"No task to show\"\n        )}\n        </>\n      )} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}